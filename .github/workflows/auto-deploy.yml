name: 🚀 Auto-Deploy & Sync

on:
  push:
    branches: [main, master]
    paths:
      - 'ckeeper.py'
      - 'interfaces/**'
      - 'core/**'
      - 'modules/**'
      - 'Dockerfile'
      - 'docker-compose.yml'
  
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # Build and push Docker image
  docker-build-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4

    - name: 🐳 Setup Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: 🔐 Login to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: 📝 Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: 🏗️ Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  # Update deployment files
  update-deployment:
    needs: docker-build-push
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: 🔄 Update Docker Compose with new image
      run: |
        # Update docker-compose.yml with new image tag
        IMAGE_TAG="${{ github.sha }}"
        sed -i "s|image: .*c-keeper.*|image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${IMAGE_TAG}|g" docker-compose.yml || true

    - name: 📝 Update quick-start scripts
      run: |
        # Update quick-start scripts with latest image
        sed -i "s|ghcr.io/.*/c-keeper:.*|${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest|g" quick-start.sh quick-start.bat || true

    - name: 💾 Commit updated deployment files
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "Auto-Deploy Bot"
        git add .
        git diff --staged --quiet || git commit -m "🚀 Auto-update deployment files with new image"
        git push || true

  # Sync with external platforms
  sync-platforms:
    needs: [docker-build-push, update-deployment]
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4

    - name: 🐳 Sync to Docker Hub
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      if: env.DOCKER_USERNAME != ''
      run: |
        echo "🐳 Syncing to Docker Hub..."
        echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        
        # Pull from GitHub Container Registry
        docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        
        # Tag for Docker Hub
        docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest ${{ secrets.DOCKER_USERNAME }}/c-keeper:latest
        
        # Push to Docker Hub
        docker push ${{ secrets.DOCKER_USERNAME }}/c-keeper:latest

    - name: 📢 Update external documentation
      run: |
        echo "📢 Would update external documentation platforms..."
        # Add integrations for GitBook, Notion, etc.

  # Trigger related workflows
  trigger-updates:
    needs: sync-platforms
    runs-on: ubuntu-latest
    
    steps:
    - name: 🔄 Trigger README update
      uses: peter-evans/repository-dispatch@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        event-type: update-readme

    - name: 📊 Trigger stats update
      uses: peter-evans/repository-dispatch@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        event-type: update-stats
